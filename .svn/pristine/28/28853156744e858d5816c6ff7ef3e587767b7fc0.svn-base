<template>
    <div class="page">
        <div class="device">
             <el-input placeholder="" :disabled="true" v-model="searchVal">
                <el-button  slot="append" icon="el-icon-search"></el-button>
             </el-input>
             <div class="block" @click="chooseCarousel">
                <el-carousel trigger="click" height="207px" class="carousel" >
                      <el-carousel-item v-for="item in carouselArray" :key="item.order">
                          <!--<router-link :to="item.linkUrl">-->
                              <img class="carousel-image" :src="item.imageUrl">
                          <!--</router-link>-->
                      </el-carousel-item>
                  </el-carousel>
             </div>
             <div class="entrance-list">
               <div class="modeList" :key="index" v-for="(item,index) in DataArr">
                 <div class="clearfix" @click="manageTitleClick(item.DataTitle)">
                    <span>{{item.DataTitle}}</span>
                  </div>
                  <div class="entrance-item" :class="{'acitve':acitveTrue==index1}" v-for="(items, index1) in item.DataList" :key="index1" @click="dataListClick(item.DataTitle,index,index1,items)">
                      <div class="cover-image">
                          <img class="entry-icon" v-if="item && items.icon" :src="items.icon">
                      </div>
                      <p class="entry-label"  v-if="item">{{items.DataVal || index1}}</p>
                  </div>
               </div>
             </div>
        </div>
    </div>
</template>

<script>
export default {
  data() {
    return {
      searchVal: "",
      acitveTrue:'',
      mid: this.$route.query.mid,
      
    };
  },
  methods: {
    // 轮播图的点击事件
    chooseCarousel(){
      this.$store.commit('chooseCarousel', {});
    },
    // 栏目标题的点击事件
    manageTitleClick(title){
      console.log(title);
    },
    // 栏目下面的数据的点击事件
    dataListClick(title,index,index1,items1){
      // 赋值到vuex用于属性区总监取值显示
      this.$store.commit("chooseManage",{
        choosManIndex:index,
        chooseLableIndex:index1,
      })
      // console.log(this.$store.state.attribute.choosManIndex,this.$store.state.attribute.chooseLableIndex)
    }
  },
  mounted() {},
  created(){

  },
  computed: {
    carouselArray() {
      return this.$store.state.attribute.carouselArray;
    },
    DataArr(){
      return this.$store.state.attribute.managementArr;
    }
  }
};
</script>

<style scoped>
.page {
  display: flex;
  flex-grow: 1;
  padding: 0 10px;
}
.device {
  display: flex;
  flex-direction: column;
  justify-content: start;
  border: 1px solid #333;
  width: 375px;
  height: 820px;
  overflow: auto;
  margin: 0 auto;
}

.carousel-image {
  width: 100%;
}
.entrance-list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding-bottom: 20px;
}
.modeList {
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.entrance-item {
  width: 30%;
  border: 1px dotted #ccc;
  margin: 15px 1.65% 0 1.65%;
}
 .active{
    border-color: red;
}
.clearfix{
  width:100%;
  height: 40px;
  line-height: 40px;
  text-align: left;
  padding-left: 10px;
  border-bottom:1px solid #cccccc;
  border-top:1px solid #cccccc;
  }

.entrance-item.active {
  border-color: red;
}

.cover-image {
  display: block;
  width: 100%;
  padding-bottom: 100%;
  position: relative;
}

.entry-icon {
  position: absolute;
  top: 15%;
  left: 15%;
  height: 70%;
  width: 70%;
  border-radius: 50%;
}

.entry-label {
  margin-bottom: 5px;
  color: #333;
  font-size: 14px;
  text-align: center;
}
</style>
<style lang='less'>
.box-card {
  .el-card__header {
    padding: 10px 0 10px 10px !important;
  }
}
</style>

